// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostTemplate /> should render 1`] = `
.c6 {
  line-height: 1.2;
  color: #000000;
  font-size: 2.4rem;
  text-transform: uppercase;
}

.c14 {
  line-height: 1.2;
  color: #000000;
  font-size: 2.4rem;
  text-transform: none;
}

.c18 {
  line-height: 1.2;
  color: #000000;
  font-size: 6.4rem;
  text-transform: none;
}

.c17 {
  padding-bottom: 4.0rem;
  margin-bottom: 4.0rem;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c17 .c5 {
  margin: 0;
  margin-bottom: 2.4rem;
}

.c19 {
  font-size: 2.4rem;
  margin: 2.4rem 0;
}

.c20 {
  display: block;
  max-width: 100%;
  margin-bottom: 2.4rem;
}

.c21 {
  font-size: 1.6rem;
  color: #AAAAAA;
  font-style: italic;
}

.c21 .categories span::after {
  content: ', ';
}

.c21 .categories span:last-child::after {
  content: '';
}

.c21 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c21 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c23 {
  width: 100%;
  font-size: calc(1.6rem + 0.2rem);
  line-height: 1.5;
}

.c23 p {
  width: 100%;
  margin: 2.4rem 0;
  word-wrap: break-word;
}

.c23 a,
.c23 a:visited,
.c23 a:link {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c23 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c23 code {
  font-family: monospace;
  color: #dc143c;
  font-size: 1.6rem;
  background: #DDDDDD;
  padding: 0.2rem;
  margin: 0.2rem;
}

.c23 pre {
  background: #000000;
  padding: 2.4rem;
  font-family: monospace;
  color: #FFFFFF;
  margin: 2.4rem 0;
  overflow-x: auto;
  font-size: 1.6rem;
}

.c23 pre code {
  color: inherit;
  background: inherit;
}

.c23 img {
  max-width: 100%;
}

.c23 .image {
  background: #DDDDDD;
  line-height: 0;
  margin: 2.4rem 0;
}

.c23 .image figcaption {
  font-size: 1.6rem;
  padding: 1.6rem 0;
  text-align: center;
  line-height: 1.3;
  margin: 2.4rem 0;
}

.c23 .image-style-side {
  max-width: 50%;
  float: right;
  margin: 2.4rem;
}

.c23 hr {
  border: none;
  border: 1px solid red;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c23 ul,
.c23 ol {
  margin: 2.4rem 4.0rem;
}

.c23 .table {
  width: 100%;
  overflow: hidden;
  overflow-x: auto;
}

.c23 table {
  width: 100%;
  border-collapse: collapse;
}

.c23 table td,
.c23 table th {
  padding: 1.6rem;
  border: 0.1rem solid #DDDDDD;
}

.c23 blockquote {
  border-left: 0.5rem solid #dc143c;
  color: #AAAAAA;
  -webkit-filter: brightness(80%);
  filter: brightness(80%);
  padding-left: 2.4rem;
  font-style: italic;
  margin: 2.4rem;
}

.c16 {
  width: 100%;
  margin: 0 auto;
  padding: 0 3.2rem;
  max-width: 96rem;
}

.c22 {
  width: 100%;
  margin: 0 auto;
  padding: 0 3.2rem;
  max-width: 80rem;
}

.c25 {
  margin: 2.4rem 0;
}

.c25 span {
  margin: 0 0 0 0.5rem;
}

.c25 span::before {
  content: ' ';
}

.c25 span::after {
  content: ', ';
}

.c25 span:last-child::after {
  content: '';
}

.c25 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c25 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c27 {
  width: 100%;
  text-align: center;
}

.c27 a {
  color: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 1.6rem;
}

.c3 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c28 {
  position: fixed;
  background: #000000;
  color: #FFFFFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 4rem;
  height: 4rem;
  bottom: 2rem;
  right: 2rem;
  z-index: 6;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c8 > img {
  width: 15rem;
  height: 15rem;
  border-radius: 50%;
}

.c12 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-bottom: 6.4rem;
  max-width: 96rem;
  color: #333333;
  font-size: 1.6rem;
  margin: 0 auto;
}

.c12 .c5 {
  margin-right: calc(1.6rem - 1rem);
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
  -ms-flex-flow: column wrap;
  flex-flow: column wrap;
  margin-left: 2.4rem;
}

.c10 {
  display: block;
  color: #FFFFFF;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin-bottom: 1.6rem;
  font-size: 1.8rem;
  border-right: 0.5rem solid #000000;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  cursor: pointer;
}

.c10:hover {
  border-right: 0.5rem solid #dc143c;
  color: #dc143c;
}

.c1 {
  width: 27rem;
  height: 100%;
  background: #000000;
  border-top-right-radius: 4px;
  padding: 0.8rem calc(0.8rem - 0.6rem);
  position: fixed;
  left: -26rem;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  z-index: 1001;
}

.c1 .c7 {
  margin-top: 6.4rem;
}

.c1 .c7 img {
  border: 0.5rem solid #dc143c;
}

.c1.active {
  left: 0rem;
  overflow-y: auto;
  overflow-x: hidden;
}

.c4 {
  width: 100%;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  background-color: #000000;
  border-radius: 4px;
  left: 2rem;
}

.c2 svg {
  width: 3rem;
  color: #dc143c;
  padding-right: 3.5rem;
  padding-top: 1rem;
  cursor: pointer;
  -webkit-transition: filter 300ms ease-in-out;
  transition: filter 300ms ease-in-out;
}

.c2 svg:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c2 .menuIcon {
  padding: 0;
}

.c9 {
  width: 90%;
  margin: 4rem 0;
}

.c0 {
  padding-left: 4px;
}

.c11 {
  padding-top: 6.4rem;
}

.c15 {
  max-width: 120rem;
  width: 100%;
  margin: 0 auto;
  margin-bottom: 6.4rem;
}

.c26 {
  width: 100%;
  margin: 0 auto;
  padding: 0;
}

.c24 {
  padding: 0 3.2rem;
}

@media (max-width:768px) {
  .c18 {
    font-size: 4.0rem;
  }
}

@media (max-width:768px) {
  .c23 {
    font-size: 2rem;
  }

  .c23 pre {
    width: 82%;
  }

  .c23 .image-style-side {
    max-width: 100%;
    float: none;
    margin: 0;
  }
}

@media (max-width:768px) {
  .c16 {
    padding: 0;
  }
}

@media (max-width:768px) {
  .c22 {
    padding: 0;
  }
}

@media (max-width:768px) {
  .c12 {
    margin: 0;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:768px) {
  .c13 {
    margin-top: 1.6rem;
    margin-left: 1.6rem;
  }
}

@media (max-width:768px) {
  .c1 {
    width: 25.5rem;
  }
}

@media (max-width:768px) {
  .c15 {
    width: 100%;
  }
}

@media (max-width:768px) {
  .c24 {
    padding-left: 2px;
  }
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
    >
      <div
        class="c2"
      >
        <svg
          aria-label="Open menu"
          class="c3 menuIcon"
          fill="currentColor"
          focusable="false"
          role="img"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>
            Open menu
          </title>
          <path
            d="M0 0h24v24H0V0z"
            fill="none"
          />
          <path
            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
          />
        </svg>
      </div>
      <nav
        aria-hidden="true"
        class="c4"
      >
        <h1
          class="c5 c6"
        >
          <a
            class="c7 c8"
            href="/"
            target="_self"
          >
            <img
              alt="New Programming"
              src="/assets/images/logo.jpg"
            />
          </a>
        </h1>
        <section
          class="c9"
        >
          <a
            class="c10"
            href="https://pt-br.reactjs.org/docs/hooks-effect.html"
            target="_blank"
          />
        </section>
      </nav>
    </div>
    <div
      class="c11"
    >
      <header
        class="c12"
      >
        <h1
          class="c5 c6"
        >
          <a
            class="c7 c8"
            href="/"
            target="_self"
          >
            <img
              alt="New Programming - Esse blog é voltado para os amantes de tecnologia que querem aprender sempre um pouco mais."
              src="/assets/images/logo.jpg"
            />
          </a>
        </h1>
        <section
          class="c13"
        >
          <h1
            class="c5 c14"
          >
            New Programming
          </h1>
          <p>
            Esse blog é voltado para os amantes de tecnologia que querem aprender sempre um pouco mais.
          </p>
        </section>
      </header>
    </div>
    <div
      class="c15"
    >
      <section
        class=""
      >
        <section
          class="c16"
        >
          <section
            class="c17"
          >
            <h2
              class="c5 c18"
            >
              Usando Effect Hook (Hook de Efeito)
            </h2>
            <p
              class="c19"
            >
              O Effect Hook (Hook de Efeito) te permite executar efeitos colaterais em componentes funcionais.
            </p>
            <img
              alt="Usando Effect Hook (Hook de Efeito)"
              class="c20"
              src="https://res.cloudinary.com/project-cdn/image/upload/v1643992684/use_Effect_hook_62405844a5.png"
            />
            <div
              class="c21"
            >
              <p>
                <span>
                  Por 
                </span>
                <a
                  href="/authors/luan-mateus"
                >
                  LuanMateus
                </a>
                <span
                  class="separator"
                >
                   | 
                </span>
                <time>
                  Invalid Date
                </time>
                <span
                  class="separator"
                >
                   | 
                </span>
                <span
                  class="categories"
                >
                  <span>
                    <a
                      href="/categories/react"
                    >
                      React
                    </a>
                  </span>
                </span>
              </p>
            </div>
          </section>
        </section>
        <section
          class="c22"
        >
          <div
            class="c23"
          >
            <p>
              <span
                style="color:rgb(0,0,0);"
              >
                O 
              </span>
              <i>
                Effect Hook
              </i>
              <span
                style="color:rgb(0,0,0);"
              >
                 (Hook de Efeito) te permite executar efeitos colaterais em componentes funcionais:
              </span>
            </p>
            <pre>
              <code
                class="language-plaintext"
              >
                import React, { useState, useEffect } from 'react';
function Exemplo() {
  const [count, setCount] = useState(0);

  // Similar ao componentDidMount e componentDidUpdate:  useEffect(() =&gt; {    // Atualiza o titulo do documento usando a API do browser    document.title = \`Você clicou \${count} vezes\`;  });
  return (
    &lt;div&gt;
      &lt;p&gt;Você clicou {count} vezes&lt;/p&gt;
      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;
        Clique aqui
      &lt;/button&gt;
    &lt;/div&gt;
  );
}
              </code>
            </pre>
            <p>
               
            </p>
            <p
              style="margin-left:0px;"
            >
              Esse trecho de código é baseado no 
              <a
                href="https://pt-br.reactjs.org/docs/hooks-state.html"
              >
                exemplo de contador da página anterior
              </a>
              , mas nós adicionamos uma nova funcionalidade a ele: nós definimos o titulo do documento para ser uma mensagem customizada que inclua o número de cliques.
            </p>
            <p
              style="margin-left:0px;"
            >
              Buscar dados, configurar uma subscription, e mudar o DOM manualmente dentro dos componentes React são exemplos de efeitos colaterais. Esteja você acostumado ou não a chamar essas operações de “efeitos colaterais” (ou somente “efeitos”), você provavelmente já usou eles em seus componentes antes.
            </p>
            <p
              style="margin-left:0px;"
            >
               
            </p>
            <p
              style="margin-left:0px;"
            >
              <strong>
                Dica
              </strong>
            </p>
            <p
              style="margin-left:0px;"
            >
              Se você está familiarizado com os métodos do ciclo de vida do React, você pode pensar no Hook 
              <code>
                useEffect
              </code>
               como 
              <code>
                componentDidMount
              </code>
              , 
              <code>
                componentDidUpdate
              </code>
              , e 
              <code>
                componentWillUnmount
              </code>
               combinados.
            </p>
            <p
              style="margin-left:0px;"
            >
               
            </p>
            <p
              style="margin-left:0px;"
            >
              Existem dois tipos comuns de efeitos colaterais nos componentes React: aqueles que não precisam de limpeza, e aqueles que precisam. Vamos ver as suas diferenças mais detalhadamente.
            </p>
            <h2
              style="margin-left:0px;"
            >
               
            </h2>
            <figure
              class="media"
            >
              <oembed
                url="https://www.youtube.com/watch?v=jcc9T-5inrk"
              />
            </figure>
          </div>
        </section>
      </section>
      <div
        class="c24"
      >
        <div
          class="c25"
        >
          tags:
          <span>
            <a
              href="/tags/use-effect"
            >
              useReducer
            </a>
          </span>
        </div>
      </div>
    </div>
    <div
      class="c26"
    >
      <footer
        class="c27"
      >
        <div
          class="c23"
        >
          <p>
            A footer paragraph
          </p>
        </div>
      </footer>
    </div>
    <a
      aria-label="Go to top"
      class="c28"
      href="#"
      title="Go to top"
    >
      <svg
        aria-hidden="true"
        class="c3"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 0h24v24H0V0z"
          fill="none"
        />
        <path
          d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z"
        />
      </svg>
    </a>
  </div>
</div>
`;
