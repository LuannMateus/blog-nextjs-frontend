// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostTemplate /> should render 1`] = `
.c35 {
  max-width: 80rem;
  width: 100%;
  margin: 3.2rem auto;
  padding: 0 3.2rem;
}

.c11 {
  line-height: 1.2;
  color: #000000;
  font-size: 2.4rem;
  text-transform: uppercase;
}

.c19 {
  line-height: 1.2;
  color: #000000;
  font-size: 2.4rem;
  text-transform: none;
}

.c26 {
  line-height: 1.2;
  color: #000000;
  font-size: 6.4rem;
  text-transform: none;
}

.c25 {
  padding-bottom: 4.0rem;
  margin-bottom: 4.0rem;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c25 .c10 {
  margin: 0;
  margin-bottom: 2.4rem;
}

.c27 {
  font-size: 2.4rem;
  margin: 2.4rem 0;
}

.c28 {
  display: block;
  max-width: 100%;
  margin-bottom: 2.4rem;
}

.c29 {
  font-size: 1.6rem;
  color: #AAAAAA;
  font-style: italic;
}

.c29 .categories span::after {
  content: ', ';
}

.c29 .categories span:last-child::after {
  content: '';
}

.c29 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c29 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c31 pre[class*='language-'],
.c31 code[class*='language-'] {
  color: #d4d4d4;
  font-size: 13px;
  text-shadow: none;
  font-family: Menlo,Monaco,Consolas,'Andale Mono','Ubuntu Mono','Courier New',monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

.c31 pre[class*='language-']::selection,
.c31 code[class*='language-']::selection,
.c31 pre[class*='language-'] *::selection,
.c31 code[class*='language-'] *::selection {
  text-shadow: none;
  background: #75a7ca;
}

.c31 pre[class*='language-'] {
  padding: 1em;
  margin: 0.5em 0;
  overflow: auto;
  background: #1e1e1e;
}

.c31:not(pre) > code[class*='language-'] {
  padding: 0.1em 0.3em;
  border-radius: 0.3em;
  color: #db4c69;
  background: #f9f2f4;
}

.c31 .namespace {
  opacity: 0.7;
}

.c31 .token.doctype .token.doctype-tag {
  color: #569cd6;
}

.c31 .token.doctype .token.name {
  color: #9cdcfe;
}

.c31 .token.comment,
.c31 .token.prolog {
  color: #6a9955;
}

.c31 .token.punctuation,
.c31 .language-html .language-css .token.punctuation,
.c31 .language-html .language-javascript .token.punctuation {
  color: #d4d4d4;
}

.c31 .token.property,
.c31 .token.tag,
.c31 .token.boolean,
.c31 .token.number,
.c31 .token.constant,
.c31 .token.symbol,
.c31 .token.inserted,
.c31 .token.unit {
  color: #b5cea8;
}

.c31 .token.selector,
.c31 .token.attr-name,
.c31 .token.string,
.c31 .token.char,
.c31 .token.builtin,
.c31 .token.deleted {
  color: #ce9178;
}

.c31 .language-css .token.string.url {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c31 .token.operator,
.c31 .token.entity {
  color: #d4d4d4;
}

.c31 .token.operator.arrow {
  color: #569cd6;
}

.c31 .token.atrule {
  color: #ce9178;
}

.c31 .token.atrule .token.rule {
  color: #c586c0;
}

.c31 .token.atrule .token.url {
  color: #9cdcfe;
}

.c31 .token.atrule .token.url .token.function {
  color: #dcdcaa;
}

.c31 .token.atrule .token.url .token.punctuation {
  color: #d4d4d4;
}

.c31 .token.keyword {
  color: #569cd6;
}

.c31 .token.keyword.module,
.c31 .token.keyword.control-flow {
  color: #c586c0;
}

.c31 .token.function,
.c31 .token.function .token.maybe-class-name {
  color: #dcdcaa;
}

.c31 .token.regex {
  color: #d16969;
}

.c31 .token.important {
  color: #569cd6;
}

.c31 .token.italic {
  font-style: italic;
}

.c31 .token.constant {
  color: #9cdcfe;
}

.c31 .token.class-name,
.c31 .token.maybe-class-name {
  color: #4ec9b0;
}

.c31 .token.console {
  color: #9cdcfe;
}

.c31 .token.parameter {
  color: #9cdcfe;
}

.c31 .token.interpolation {
  color: #9cdcfe;
}

.c31 .token.punctuation.interpolation-punctuation {
  color: #569cd6;
}

.c31 .token.boolean {
  color: #569cd6;
}

.c31 .token.property,
.c31 .token.variable,
.c31 .token.imports .token.maybe-class-name,
.c31 .token.exports .token.maybe-class-name {
  color: #9cdcfe;
}

.c31 .token.selector {
  color: #d7ba7d;
}

.c31 .token.escape {
  color: #d7ba7d;
}

.c31 .token.tag {
  color: #569cd6;
}

.c31 .token.tag .token.punctuation {
  color: #808080;
}

.c31 .token.cdata {
  color: #808080;
}

.c31 .token.attr-name {
  color: #9cdcfe;
}

.c31 .token.attr-value,
.c31 .token.attr-value .token.punctuation {
  color: #ce9178;
}

.c31 .token.attr-value .token.punctuation.attr-equals {
  color: #d4d4d4;
}

.c31 .token.entity {
  color: #569cd6;
}

.c31 .token.namespace {
  color: #4ec9b0;
}

.c31 pre[class*='language-javascript'],
.c31 code[class*='language-javascript'],
.c31 pre[class*='language-jsx'],
.c31 code[class*='language-jsx'],
.c31 pre[class*='language-typescript'],
.c31 code[class*='language-typescript'],
.c31 pre[class*='language-tsx'],
.c31 code[class*='language-tsx'] {
  color: #9cdcfe;
}

.c31 pre[class*='language-css'],
.c31 code[class*='language-css'] {
  color: #ce9178;
}

.c31 pre[class*='language-html'],
.c31 code[class*='language-html'] {
  color: #d4d4d4;
}

.c31 .language-regex .token.anchor {
  color: #dcdcaa;
}

.c31 .language-html .token.punctuation {
  color: #808080;
}

.c31 pre[data-line] {
  position: relative;
}

.c31 pre[class*='language-'] > code[class*='language-'] {
  position: relative;
  z-index: 1;
}

.c31 .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: #f7ebc6;
  box-shadow: inset 5px 0 0 #f7d87c;
  z-index: 0;
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

.c32 {
  width: 100%;
  font-size: calc(1.6rem + 0.2rem);
  line-height: 1.5;
}

.c32 iframe[src*='ads'] {
  display: none;
}

.c32 p {
  width: 100%;
  margin: 2.4rem 0;
  word-wrap: break-word;
}

.c32 a,
.c32 a:visited,
.c32 a:link {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c32 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c32 code {
  font-family: monospace;
  color: #dc143c;
  font-size: 1.6rem;
  background: #DDDDDD;
  padding: 0.2rem;
  margin: 0.2rem;
}

.c32 pre {
  background: #000000;
  padding: 2.4rem;
  font-family: monospace;
  color: #FFFFFF;
  margin: 2.4rem 0;
  overflow-x: auto;
  font-size: 1.6rem;
}

.c32 pre code {
  color: inherit;
  background: inherit;
}

.c32 img {
  max-width: 100%;
}

.c32 .image {
  background: #DDDDDD;
  line-height: 0;
  margin: 2.4rem 0;
}

.c32 .image figcaption {
  font-size: 1.6rem;
  padding: 1.6rem 0;
  text-align: center;
  line-height: 1.3;
  margin: 2.4rem 0;
}

.c32 .image-style-side {
  max-width: 50%;
  float: right;
  margin: 2.4rem;
}

.c32 hr {
  border: none;
  border: 1px solid red;
  border-bottom: 0.1rem solid #DDDDDD;
}

.c32 ul,
.c32 ol {
  margin: 2.4rem 4.0rem;
}

.c32 .table {
  width: 100%;
  overflow: hidden;
  overflow-x: auto;
}

.c32 table {
  width: 100%;
  border-collapse: collapse;
}

.c32 table td,
.c32 table th {
  padding: 1.6rem;
  border: 0.1rem solid #DDDDDD;
}

.c32 blockquote {
  border-left: 0.5rem solid #dc143c;
  color: #AAAAAA;
  -webkit-filter: brightness(80%);
  filter: brightness(80%);
  padding-left: 2.4rem;
  font-style: italic;
  margin: 2.4rem;
}

.c24 {
  width: 100%;
  margin: 0 auto;
  padding: 0 1.6rem;
  max-width: 96rem;
}

.c30 {
  width: 100%;
  margin: 0 auto;
  padding: 0 1.6rem;
  max-width: 80rem;
}

.c23 {
  width: 100%;
  padding-left: 1.6rem;
}

.c34 {
  margin: 2.4rem auto;
  max-width: 80rem;
  padding: 0 0 0 3.2rem;
}

.c34 span {
  margin: 0 0 0 0.5rem;
}

.c34 span::before {
  content: ' ';
}

.c34 span::after {
  content: ', ';
}

.c34 span:last-child::after {
  content: '';
}

.c34 a {
  color: #dc143c;
  -webkit-text-decoration: none;
  text-decoration: none;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c34 a:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c37 {
  width: 100%;
  text-align: center;
}

.c37 a {
  color: inherit;
  -webkit-text-decoration: none;
  text-decoration: none;
  font-size: 1.6rem;
}

.c8 {
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
}

.c38 {
  position: fixed;
  background: #000000;
  color: #FFFFFF;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 4rem;
  height: 4rem;
  bottom: 2rem;
  right: 2rem;
  z-index: 6;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  color: inherit;
}

.c13 > img {
  width: 15rem;
  height: 15rem;
  border-radius: 50%;
}

.c17 {
  max-width: 96rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 1.6rem;
  padding-bottom: 6.4rem;
  color: #333333;
  font-size: 1.6rem;
  margin: 0 auto;
}

.c17 .c10 {
  margin-right: calc(1.6rem - 1rem);
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
  -ms-flex-flow: column wrap;
  flex-flow: column wrap;
  margin-left: 2.4rem;
}

.c15 {
  display: block;
  color: #FFFFFF;
  -webkit-text-decoration: none;
  text-decoration: none;
  margin-bottom: 1.6rem;
  font-size: 1.8rem;
  border-right: 0.5rem solid #000000;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  cursor: pointer;
}

.c15:hover {
  border-right: 0.5rem solid #dc143c;
  color: #dc143c;
}

.c6 {
  width: 27rem;
  height: 100%;
  background: #000000;
  border-top-right-radius: 4px;
  padding: 0.8rem calc(0.8rem - 0.6rem);
  position: fixed;
  left: -26rem;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  z-index: 1001;
}

.c6 .c12 {
  margin-top: 6.4rem;
}

.c6 .c12 img {
  border: 0.5rem solid #dc143c;
}

.c6.active {
  left: 0rem;
  overflow-y: auto;
  overflow-x: hidden;
}

.c9 {
  width: 100%;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  background-color: #000000;
  border-radius: 4px;
  left: 2rem;
}

.c7 svg {
  width: 3rem;
  color: #FFFFFF;
  padding-right: 3.5rem;
  padding-top: 1rem;
  cursor: pointer;
  -webkit-transition: filter 300ms ease-in-out;
  transition: filter 300ms ease-in-out;
}

.c7 svg:hover {
  -webkit-filter: brightness(50%);
  filter: brightness(50%);
}

.c7 .menuIcon {
  padding: 0;
}

.c14 {
  width: 90%;
  margin: 4rem 0;
}

.c1 {
  position: fixed;
  top: 2rem;
  right: 2rem;
  z-index: 2;
}

.c2 {
  position: relative;
  display: inline-block;
  width: 5rem;
  height: 2.5rem;
  line-height: 0;
  font-size: 0;
  overflow: hidden;
  color: rgba(0,0,0,0);
}

.c3 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  opacity: 0;
  width: 0;
  height: 0;
}

.c3:checked + .c4 {
  background: #dc143c;
}

.c3:focus + .c4 {
  box-shadow: 0 0 1px #dc143c;
}

.c3:checked + .c4:before {
  -webkit-transform: translateX(1.9rem);
  -ms-transform: translateX(1.9rem);
  transform: translateX(1.9rem);
  background: #000000;
}

.c5 {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #DDDDDD;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
  border-radius: 2rem;
  box-shadow: 0 0 1px #000000;
}

.c5:before {
  content: '';
  position: absolute;
  height: 2.1rem;
  width: 2.1rem;
  left: 0.4rem;
  bottom: 0.25rem;
  background: #333333;
  border-radius: 50%;
  -webkit-transition: all 300ms ease-in-out;
  transition: all 300ms ease-in-out;
}

.c0 svg.search-ok-icon,
.c0 svg.search-cancel-icon {
  width: 2.4rem;
  height: 2.4rem;
  margin-left: 1rem;
}

.c0 svg.search-cancel-icon {
  color: #dc143c;
}

.c16 {
  padding-top: 6.4rem;
  padding-left: 20px;
}

.c20 {
  margin: 0 auto;
  margin-bottom: 4.0rem;
  padding: 0 3.2rem;
  max-width: 120rem;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c21 {
  padding: 0.5rem 1.6rem;
}

.c21:disabled {
  outline: 0.1rem solid #dc143c;
}

.c22 {
  max-width: 120rem;
  width: 100%;
  margin-bottom: 6.4rem;
}

.c36 {
  width: 100%;
  margin: 0 auto;
  padding: 0;
}

.c33 {
  padding: 0 3.2rem;
}

@media (max-width:768px) {
  .c26 {
    font-size: 4.0rem;
  }
}

@media print {
  .c31 pre[class*='language-'],
  .c31 code[class*='language-'] {
    text-shadow: none;
  }
}

@media (max-width:768px) {
  .c32 {
    font-size: 2rem;
  }

  .c32 pre {
    width: 82%;
  }

  .c32 .image-style-side {
    max-width: 100%;
    float: none;
    margin: 0;
  }
}

@media (max-width:768px) {
  .c17 {
    margin: 0;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:768px) {
  .c18 {
    text-align: center;
    margin-top: 1.6rem;
  }
}

@media (max-width:768px) {
  .c6 {
    width: 25.5rem;
  }
}

@media (max-width:768px) {
  .c22 {
    width: 100%;
  }
}

@media (max-width:768px) {
  .c33 {
    padding-left: 2px;
  }
}

<div>
  <div
    class="c0"
  >
    <div
      class="c1"
    >
      <label
        aria-label="Toggle light and dark modes"
        class="c2"
      >
        <input
          class="c3"
          type="checkbox"
          value="Toggle light and dark modes"
        />
        <span
          class="c4 c5"
        />
      </label>
    </div>
    <div
      class="c6"
    >
      <div
        class="c7"
      >
        <svg
          aria-label="Open menu"
          class="c8 menuIcon"
          fill="currentColor"
          focusable="false"
          role="img"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>
            Open menu
          </title>
          <path
            d="M0 0h24v24H0V0z"
            fill="none"
          />
          <path
            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
          />
        </svg>
      </div>
      <nav
        aria-hidden="true"
        class="c9"
      >
        <h1
          class="c10 c11"
        >
          <a
            class="c12 c13"
            href="/"
            target="_self"
          >
            <img
              alt="New Programming"
              src="/assets/images/logo.jpg"
            />
          </a>
        </h1>
        <section
          class="c14"
        >
          <a
            class="c15"
            href="https://pt-br.reactjs.org/docs/hooks-effect.html"
            target="_blank"
          >
            useEffect
          </a>
        </section>
      </nav>
    </div>
    <div
      class="c16"
    >
      <header
        class="c17"
      >
        <h1
          class="c10 c11"
        >
          <a
            class="c12 c13"
            href="/"
            target="_self"
          >
            <img
              alt="New Programming - Esse blog é voltado para os amantes de tecnologia que querem aprender sempre um pouco mais."
              src="/assets/images/logo.jpg"
            />
          </a>
        </h1>
        <section
          class="c18"
        >
          <h1
            class="c10 c19"
          >
            New Programming
          </h1>
          <p>
            Esse blog é voltado para os amantes de tecnologia que querem aprender sempre um pouco mais.
          </p>
        </section>
      </header>
    </div>
    <div
      class="c20"
    >
      <input
        class="c21"
        name="q"
        placeholder="Encontre posts"
        type="search"
        value=""
      />
      <svg
        aria-hidden="true"
        aria-label="Input enabled"
        class="c8 search-ok-icon"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 0h24v24H0V0z"
          fill="none"
        />
        <path
          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z"
        />
      </svg>
    </div>
    <div
      class="c22"
    >
      <section
        class="c23"
      >
        <section
          class="c24"
        >
          <section
            class="c25"
          >
            <h2
              class="c10 c26"
            >
              Usando Effect Hook (Hook de Efeito)
            </h2>
            <p
              class="c27"
            >
              O Effect Hook (Hook de Efeito) te permite executar efeitos colaterais em componentes funcionais.
            </p>
            <img
              alt="Usando Effect Hook (Hook de Efeito)"
              class="c28"
              src="https://res.cloudinary.com/project-cdn/image/upload/v1643992684/use_Effect_hook_62405844a5.png"
            />
            <div
              class="c29"
            >
              <p>
                <span>
                  Por 
                </span>
                <a
                  href="/authors/luan-mateus"
                >
                  LuanMateus
                </a>
                <span
                  class="separator"
                >
                   | 
                </span>
                <time>
                  Invalid Date
                </time>
                <span
                  class="separator"
                >
                   | 
                </span>
                <span
                  class="categories"
                >
                  <span>
                    <a
                      href="/categories/react"
                    >
                      React
                    </a>
                  </span>
                </span>
              </p>
            </div>
          </section>
        </section>
        <section
          class="c30"
        >
          <div
            class="c31"
          >
            <div
              class="c32"
            >
              <p>
                <span
                  style="color:rgb(0,0,0);"
                >
                  O 
                </span>
                <i>
                  Effect Hook
                </i>
                <span
                  style="color:rgb(0,0,0);"
                >
                   (Hook de Efeito) te permite executar efeitos colaterais em componentes funcionais:
                </span>
              </p>
              <pre
                class="language-plaintext"
                tabindex="0"
              >
                <code
                  class="language-plaintext"
                >
                  import React, { useState, useEffect } from 'react';
function Exemplo() {
  const [count, setCount] = useState(0);

  // Similar ao componentDidMount e componentDidUpdate:  useEffect(() =&gt; {    // Atualiza o titulo do documento usando a API do browser    document.title = \`Você clicou \${count} vezes\`;  });
  return (
    &lt;div&gt;
      &lt;p&gt;Você clicou {count} vezes&lt;/p&gt;
      &lt;button onClick={() =&gt; setCount(count + 1)}&gt;
        Clique aqui
      &lt;/button&gt;
    &lt;/div&gt;
  );
}
                </code>
              </pre>
              <p>
                 
              </p>
              <p
                style="margin-left:0px;"
              >
                Esse trecho de código é baseado no 
                <a
                  href="https://pt-br.reactjs.org/docs/hooks-state.html"
                >
                  exemplo de contador da página anterior
                </a>
                , mas nós adicionamos uma nova funcionalidade a ele: nós definimos o titulo do documento para ser uma mensagem customizada que inclua o número de cliques.
              </p>
              <p
                style="margin-left:0px;"
              >
                Buscar dados, configurar uma subscription, e mudar o DOM manualmente dentro dos componentes React são exemplos de efeitos colaterais. Esteja você acostumado ou não a chamar essas operações de “efeitos colaterais” (ou somente “efeitos”), você provavelmente já usou eles em seus componentes antes.
              </p>
              <p
                style="margin-left:0px;"
              >
                 
              </p>
              <p
                style="margin-left:0px;"
              >
                <strong>
                  Dica
                </strong>
              </p>
              <p
                style="margin-left:0px;"
              >
                Se você está familiarizado com os métodos do ciclo de vida do React, você pode pensar no Hook 
                <code>
                  useEffect
                </code>
                 como 
                <code>
                  componentDidMount
                </code>
                , 
                <code>
                  componentDidUpdate
                </code>
                , e 
                <code>
                  componentWillUnmount
                </code>
                 combinados.
              </p>
              <p
                style="margin-left:0px;"
              >
                 
              </p>
              <p
                style="margin-left:0px;"
              >
                Existem dois tipos comuns de efeitos colaterais nos componentes React: aqueles que não precisam de limpeza, e aqueles que precisam. Vamos ver as suas diferenças mais detalhadamente.
              </p>
              <h2
                style="margin-left:0px;"
              >
                 
              </h2>
              <figure
                class="media"
              >
                <oembed
                  url="https://www.youtube.com/watch?v=jcc9T-5inrk"
                />
              </figure>
            </div>
          </div>
        </section>
      </section>
      <div
        class="c33"
      >
        <div
          class="c34"
        >
          tags:
          <span>
            <a
              href="/tags/use-effect"
            >
              useReducer
            </a>
          </span>
        </div>
      </div>
      <div
        class="c35"
      >
        <div
          id="disqus_thread"
        />
      </div>
    </div>
    <div
      class="c36"
    >
      <footer
        class="c37"
      >
        <div
          class="c31"
        >
          <div
            class="c32"
          >
            <p>
              A footer paragraph
            </p>
          </div>
        </div>
      </footer>
    </div>
    <a
      aria-label="Go to top"
      class="c38"
      href="#"
      title="Go to top"
    >
      <svg
        aria-hidden="true"
        class="c8"
        fill="currentColor"
        focusable="false"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 0h24v24H0V0z"
          fill="none"
        />
        <path
          d="M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z"
        />
      </svg>
    </a>
  </div>
</div>
`;
